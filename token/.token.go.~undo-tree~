"dbbbeb18f8d6bee97b3cfce90a9c89fd73187a2d"
[cl-struct-undo-tree [nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil ([nil (#1=[nil ([nil ([nil nil ((#("	" 0 1 (fontified nil)) . -337) (undo-tree-id738 . -1) 338 (#("f" 0 1 (fontified t)) . -338) (undo-tree-id739 . -1) (336 . 339) (t 23421 53905 965423 801000) 322) ((#("
	f" 0 1 (fontified t face font-lock-comment-face) 1 2 (fontified nil) 2 3 (fontified nil)) . 336) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -2) (undo-tree-id744 . -2) (undo-tree-id745 . -3) (337 . 339)) (23421 53910 812226 429000) 0 nil]) ((#("	" 0 1 (fontified nil)) . -442) (undo-tree-id736 . -1) 443 (#("f" 0 1 (fontified t)) . -443) (undo-tree-id737 . -1) (443 . 444) (441 . 443) (t 23421 53897 15423 913000) 430) ((#("
	" 0 1 (face font-lock-comment-face) 1 2 (fontified nil)) . 441) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -2) (undo-tree-id750 . -2) (undo-tree-id751 . -2) (#("f" 0 1 (fontified nil)) . 443) (undo-tree-id752 . -1) (442 . 444) (t 23421 53905 965423 801000)) (23421 53910 813023 928000) 0 nil]) ((465 . 483) (#("	LET = \"LET\"
" 0 7 (fontified t) 7 12 (fontified t face font-lock-string-face) 12 13 (fontified t)) . -465) (undo-tree-id642 . -13) (undo-tree-id643 . 1) (undo-tree-id644 . -11) (undo-tree-id645 . 1) (undo-tree-id646 . 1) (undo-tree-id647 . 1) (undo-tree-id648 . 1) (undo-tree-id649 . 1) (undo-tree-id650 . 1) (undo-tree-id651 . 1) (undo-tree-id652 . 1) (undo-tree-id653 . 1) (undo-tree-id654 . 1) (undo-tree-id655 . 1) (undo-tree-id656 . 1) (undo-tree-id657 . 1) (undo-tree-id658 . 1) (undo-tree-id659 . 1) (undo-tree-id660 . 1) (undo-tree-id661 . 1) (undo-tree-id662 . 1) (undo-tree-id663 . 1) (undo-tree-id664 . 1) (undo-tree-id665 . 1) (undo-tree-id666 . 1) (undo-tree-id667 . 1) (undo-tree-id668 . 1) (undo-tree-id669 . -13) (undo-tree-id670 . -13) (undo-tree-id671 . 1) (undo-tree-id672 . 1) (undo-tree-id673 . 12) (undo-tree-id674 . 1) (undo-tree-id675 . 11) (undo-tree-id676 . 1) (undo-tree-id677 . 10) (undo-tree-id678 . 1) (undo-tree-id679 . 9) (undo-tree-id680 . 1) (undo-tree-id681 . 8) (undo-tree-id682 . 1) (undo-tree-id683 . 7) (undo-tree-id684 . -7) (undo-tree-id685 . -7) (undo-tree-id686 . -7) (undo-tree-id687 . -7) (undo-tree-id688 . -7) (undo-tree-id689 . -8) (undo-tree-id690 . 1) (undo-tree-id691 . 6) (undo-tree-id692 . 1) (undo-tree-id693 . 5) (undo-tree-id694 . 1) (undo-tree-id695 . 4) (undo-tree-id696 . 1) (undo-tree-id697 . 3) (undo-tree-id698 . -11) (undo-tree-id699 . -12) (undo-tree-id700 . 1) (undo-tree-id701 . 2) (undo-tree-id702 . -11) (undo-tree-id703 . -12) (undo-tree-id704 . 6) (undo-tree-id705 . -8) (undo-tree-id706 . 2) (undo-tree-id707 . -12) (undo-tree-id708 . 2) (undo-tree-id709 . 2) (undo-tree-id710 . -11) 476) nil (23421 53911 329406 784000) 0 nil]) ((#("f" 0 1 (fontified t)) . -477) (undo-tree-id711 . -1) (477 . 478) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 477) (undo-tree-id712 . -1) (undo-tree-id713 . 1) (undo-tree-id714 . 1) (undo-tree-id715 . 1) (undo-tree-id716 . 1) (undo-tree-id717 . 1) (undo-tree-id718 . -1) (473 . 477) (472 . 474) (#("\"" 0 1 (fontified nil)) . -472) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (466 . 473) (464 . 466) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 464) (undo-tree-id721 . -1) (undo-tree-id722 . 1) (undo-tree-id723 . 1) (undo-tree-id724 . 1) (undo-tree-id725 . 1) (undo-tree-id726 . 1) (undo-tree-id727 . 1) (undo-tree-id728 . 1) (undo-tree-id729 . 1) (undo-tree-id730 . 1) (undo-tree-id731 . 1) (undo-tree-id732 . -1) (455 . 464) (454 . 456) (#("\"" 0 1 (fontified nil)) . -454) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (443 . 455) (441 . 443) (430 . 441) (429 . 430) (#("	" 0 1 (fontified nil)) . 428) (428 . 429) (428 . 429) (#("	" 0 1 (fontified t)) . 428) (undo-tree-id735 . -1) 429 (427 . 429) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 427) (425 . 427) (424 . 426) (#("\"" 0 1 (fontified nil)) . -424) (415 . 425) (413 . 415) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 413) (412 . 413) (#("}" 0 1 (fontified t face font-lock-string-face)) . 412) (411 . 413) (#("{" 0 1 (fontified nil face font-lock-string-face)) . -411) (411 . 412) (410 . 412) (#("\"" 0 1 (fontified nil)) . -410) (404 . 411) (401 . 404) (399 . 401) (t 23421 53869 85424 280000) 398) nil (23421 53897 12190 941000) 0 nil]) ((337 . 354) (#("	COMMA = \",\"
" 0 9 (fontified t) 9 12 (fontified t face font-lock-string-face) 12 13 (fontified t)) . -337) (undo-tree-id438 . -13) (undo-tree-id439 . -13) (undo-tree-id440 . 12) (undo-tree-id441 . 11) (undo-tree-id442 . 10) (undo-tree-id443 . 9) (undo-tree-id444 . 8) (undo-tree-id445 . 7) (undo-tree-id446 . 6) (undo-tree-id447 . 5) (undo-tree-id448 . -9) (undo-tree-id449 . -9) (undo-tree-id450 . -9) (undo-tree-id451 . -9) (undo-tree-id452 . -9) (undo-tree-id453 . -10) (undo-tree-id454 . 4) (undo-tree-id455 . 3) (undo-tree-id456 . -11) (undo-tree-id457 . -12) (undo-tree-id458 . 2) (undo-tree-id459 . -11) (undo-tree-id460 . -12) (undo-tree-id461 . 1) (undo-tree-id462 . 1) (307 . 321) (#("	PLUS = \"+\"
" 0 8 (fontified t) 8 11 (fontified t face font-lock-string-face) 11 12 (fontified t)) . -307) (undo-tree-id463 . -12) (undo-tree-id464 . -12) (undo-tree-id465 . 11) (undo-tree-id466 . 10) (undo-tree-id467 . 9) (undo-tree-id468 . 8) (undo-tree-id469 . 7) (undo-tree-id470 . 6) (undo-tree-id471 . 5) (undo-tree-id472 . -8) (undo-tree-id473 . -8) (undo-tree-id474 . -8) (undo-tree-id475 . -8) (undo-tree-id476 . -8) (undo-tree-id477 . -9) (undo-tree-id478 . 4) (undo-tree-id479 . 3) (undo-tree-id480 . -10) (undo-tree-id481 . -11) (undo-tree-id482 . 2) (undo-tree-id483 . -10) (undo-tree-id484 . -11) (undo-tree-id485 . 1) (undo-tree-id486 . 1) 392) nil (23421 53869 84549 235000) 0 nil]) ((#("f" 0 1 (fontified t)) . -393) (undo-tree-id487 . -1) (393 . 394) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 393) (undo-tree-id488 . -1) (undo-tree-id489 . 1) (undo-tree-id490 . 1) (undo-tree-id491 . -1) (undo-tree-id492 . 1) (undo-tree-id493 . 1) (391 . 393) (390 . 392) (#("\"" 0 1 (fontified nil)) . -390) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (381 . 391) (379 . 381) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 379) (undo-tree-id496 . -1) (undo-tree-id497 . 1) (undo-tree-id498 . 1) (undo-tree-id499 . 1) (undo-tree-id500 . 1) (undo-tree-id501 . 1) (undo-tree-id502 . -1) (undo-tree-id503 . 1) (undo-tree-id504 . 1) (undo-tree-id505 . -1) (undo-tree-id506 . 1) (undo-tree-id507 . 1) (undo-tree-id508 . 1) (undo-tree-id509 . 1) (undo-tree-id510 . -1) (undo-tree-id511 . 1) (undo-tree-id512 . 1) (undo-tree-id513 . 1) (undo-tree-id514 . 1) (undo-tree-id515 . 1) (378 . 379) (#(")" 0 1 (fontified t face font-lock-string-face)) . 378) (undo-tree-id516 . -1) (undo-tree-id517 . 1) (undo-tree-id518 . 1) (undo-tree-id519 . -1) (377 . 379) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -377) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (377 . 378) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -377) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . 1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . 1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (#(")" 0 1 (fontified t face font-lock-string-face)) . 378) (undo-tree-id557 . -1) (undo-tree-id558 . 1) (undo-tree-id559 . 1) (undo-tree-id560 . 1) (undo-tree-id561 . -1) (undo-tree-id562 . 1) (undo-tree-id563 . 1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . 1) (undo-tree-id567 . -1) (undo-tree-id568 . 1) (undo-tree-id569 . 1) (undo-tree-id570 . 1) (undo-tree-id571 . 1) (undo-tree-id572 . -1) (#("\\" 0 1 (fontified nil syntax-table (9) face font-lock-string-face)) . -378) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . 1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -379) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (#("
" 0 1 (fontified t face font-lock-string-face)) . -380) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . 1) 381 (380 . 381) (378 . 379) (378 . 379) (377 . 379) (#("(" 0 1 (fontified nil face font-lock-string-face)) . -377) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (377 . 378) (376 . 378) (#("\"" 0 1 (fontified nil)) . -376) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (367 . 377) (366 . 367) (#("	" 0 1 (fontified nil)) . 365) (365 . 366) (365 . 366) (#("	" 0 1 (fontified t)) . 365) (undo-tree-id600 . -1) 366 (364 . 366) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 364) (undo-tree-id601 . -1) (undo-tree-id602 . 1) (undo-tree-id603 . 1) (undo-tree-id604 . 1) (undo-tree-id605 . -1) (362 . 364) (361 . 363) (#("\"" 0 1 (fontified nil)) . -361) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (349 . 362) (347 . 349) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 347) (undo-tree-id608 . -1) (undo-tree-id609 . 1) (undo-tree-id610 . 1) (undo-tree-id611 . 1) (undo-tree-id612 . -1) (345 . 347) (344 . 346) (#("\"" 0 1 (fontified nil)) . -344) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (336 . 345) (334 . 336) (323 . 334) (#("D" 0 1 (fontified t face font-lock-comment-face)) . -323) (undo-tree-id615 . -1) (undo-tree-id616 . 1) (#("E" 0 1 (fontified t face font-lock-comment-face)) . -324) (undo-tree-id617 . -1) (undo-tree-id618 . 1) 325 (321 . 325) (320 . 321) (#("	" 0 1 (fontified nil)) . 319) (319 . 320) (319 . 320) (#("	" 0 1 (fontified t)) . 319) (undo-tree-id619 . -1) 320 (318 . 320) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 318) (undo-tree-id620 . -1) (undo-tree-id621 . 1) (undo-tree-id622 . 1) (undo-tree-id623 . 1) (undo-tree-id624 . -1) (316 . 318) (315 . 317) (#("\"" 0 1 (fontified nil)) . -315) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (308 . 316) (306 . 308) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 306) (undo-tree-id627 . -1) (undo-tree-id628 . 1) (undo-tree-id629 . 1) (undo-tree-id630 . 1) (undo-tree-id631 . -1) (304 . 306) (303 . 305) (#("\"" 0 1 (fontified nil)) . -303) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (294 . 304)) nil (23421 53869 84872 212000) 0 nil]) ((#("f" 0 1 (fontified t)) . -294) (undo-tree-id634 . -1) 295 (294 . 295) (#("d" 0 1 (fontified t)) . -294) (undo-tree-id635 . -1) (undo-tree-id636 . 1) (#("f" 0 1 (fontified t)) . -295) (undo-tree-id637 . -1) (undo-tree-id638 . 1) 296 (295 . 296) (#("f" 0 1 (fontified t)) . -295) (undo-tree-id639 . -1) (294 . 296)) nil (23421 53869 84932 237000) 0 nil]) ((#("f" 0 1 (fontified t)) . -294) (undo-tree-id640 . -1) (292 . 295) (280 . 292) (279 . 280) (#("	" 0 1 (fontified nil face font-lock-comment-face)) . 278) (278 . 279) (278 . 279) (#("	" 0 1 (fontified t)) . 278) (undo-tree-id641 . -1) 279 (277 . 279) (t 23421 53716 635426 234000) 251) nil (23421 53869 84948 478000) 0 nil]) ((250 . 278) (#("	INT = \"INT\" // 1343456
" 0 7 (fontified t) 7 12 (fontified t face font-lock-string-face) 12 13 (fontified t) 13 16 (fontified t face font-lock-comment-delimiter-face) 16 23 (fontified t face font-lock-comment-face) 23 24 (fontified t face font-lock-comment-face)) . -250) (undo-tree-id218 . -22) (undo-tree-id219 . -24) (undo-tree-id220 . 1) (undo-tree-id221 . 1) (undo-tree-id222 . 1) (undo-tree-id223 . 1) (undo-tree-id224 . 1) (undo-tree-id225 . 1) (undo-tree-id226 . 1) (undo-tree-id227 . 1) (undo-tree-id228 . 1) (undo-tree-id229 . 1) (undo-tree-id230 . 1) (undo-tree-id231 . 1) (undo-tree-id232 . 1) (undo-tree-id233 . 1) (undo-tree-id234 . 1) (undo-tree-id235 . 1) (undo-tree-id236 . 1) (undo-tree-id237 . 1) (undo-tree-id238 . 1) (undo-tree-id239 . 1) (undo-tree-id240 . 1) (undo-tree-id241 . 1) (undo-tree-id242 . 1) (undo-tree-id243 . 1) (undo-tree-id244 . 1) (undo-tree-id245 . 1) (undo-tree-id246 . 1) (undo-tree-id247 . 1) (undo-tree-id248 . 1) (undo-tree-id249 . 1) (undo-tree-id250 . 1) (undo-tree-id251 . 1) (undo-tree-id252 . 1) (undo-tree-id253 . 1) (undo-tree-id254 . 1) (undo-tree-id255 . 1) (undo-tree-id256 . 1) (undo-tree-id257 . 1) (undo-tree-id258 . 1) (undo-tree-id259 . 1) (undo-tree-id260 . 1) (undo-tree-id261 . 1) (undo-tree-id262 . 1) (undo-tree-id263 . 1) (undo-tree-id264 . 1) (undo-tree-id265 . 1) (undo-tree-id266 . 1) (undo-tree-id267 . 1) (undo-tree-id268 . 1) (undo-tree-id269 . 1) (undo-tree-id270 . 1) (undo-tree-id271 . 1) (undo-tree-id272 . 1) (undo-tree-id273 . 1) (undo-tree-id274 . 1) (undo-tree-id275 . 1) (undo-tree-id276 . 1) (undo-tree-id277 . 1) (undo-tree-id278 . 1) (undo-tree-id279 . 1) (undo-tree-id280 . 1) (undo-tree-id281 . 1) (undo-tree-id282 . 1) (undo-tree-id283 . 1) (undo-tree-id284 . 1) (undo-tree-id285 . 1) (undo-tree-id286 . 1) (undo-tree-id287 . 1) (undo-tree-id288 . 1) (undo-tree-id289 . 1) (undo-tree-id290 . 1) (undo-tree-id291 . 1) (undo-tree-id292 . 1) (undo-tree-id293 . 1) (undo-tree-id294 . 1) (undo-tree-id295 . 1) (undo-tree-id296 . 1) (undo-tree-id297 . 1) (undo-tree-id298 . 1) (undo-tree-id299 . 1) (undo-tree-id300 . 1) (undo-tree-id301 . 1) (undo-tree-id302 . 1) (undo-tree-id303 . 1) (undo-tree-id304 . 1) (undo-tree-id305 . 1) (undo-tree-id306 . 1) (undo-tree-id307 . 1) (undo-tree-id308 . 1) (undo-tree-id309 . 1) (undo-tree-id310 . 1) (undo-tree-id311 . 1) (undo-tree-id312 . 1) (undo-tree-id313 . 1) (undo-tree-id314 . 1) (undo-tree-id315 . 1) (undo-tree-id316 . 1) (undo-tree-id317 . 1) (undo-tree-id318 . 1) (undo-tree-id319 . 1) (undo-tree-id320 . 1) (undo-tree-id321 . 1) (undo-tree-id322 . 1) (undo-tree-id323 . 1) (undo-tree-id324 . 1) (undo-tree-id325 . 1) (undo-tree-id326 . 1) (undo-tree-id327 . 1) (undo-tree-id328 . 1) (undo-tree-id329 . 1) (undo-tree-id330 . 1) (undo-tree-id331 . 1) (undo-tree-id332 . 1) (undo-tree-id333 . 1) (undo-tree-id334 . 1) (undo-tree-id335 . 1) (undo-tree-id336 . 1) (undo-tree-id337 . 1) (undo-tree-id338 . 1) (undo-tree-id339 . 1) (undo-tree-id340 . 1) (undo-tree-id341 . 1) (undo-tree-id342 . 1) (undo-tree-id343 . 1) (undo-tree-id344 . 1) (undo-tree-id345 . 1) (undo-tree-id346 . 1) (undo-tree-id347 . 1) (undo-tree-id348 . 1) (undo-tree-id349 . 1) (undo-tree-id350 . 1) (undo-tree-id351 . 1) (undo-tree-id352 . -24) (undo-tree-id353 . -24) (undo-tree-id354 . 1) (undo-tree-id355 . 1) (undo-tree-id356 . 23) (undo-tree-id357 . 1) (undo-tree-id358 . 22) (undo-tree-id359 . 1) (undo-tree-id360 . 21) (undo-tree-id361 . 1) (undo-tree-id362 . 20) (undo-tree-id363 . 1) (undo-tree-id364 . 19) (undo-tree-id365 . 1) (undo-tree-id366 . 18) (undo-tree-id367 . -7) (undo-tree-id368 . -7) (undo-tree-id369 . -7) (undo-tree-id370 . -7) (undo-tree-id371 . -7) (undo-tree-id372 . -8) (undo-tree-id373 . 1) (undo-tree-id374 . 17) (undo-tree-id375 . 1) (undo-tree-id376 . 16) (undo-tree-id377 . 1) (undo-tree-id378 . 15) (undo-tree-id379 . 1) (undo-tree-id380 . 14) (undo-tree-id381 . -11) (undo-tree-id382 . -12) (undo-tree-id383 . 1) (undo-tree-id384 . 13) (undo-tree-id385 . -11) (undo-tree-id386 . -12) (undo-tree-id387 . 1) (undo-tree-id388 . 12) (undo-tree-id389 . 1) (undo-tree-id390 . 11) (undo-tree-id391 . 1) (undo-tree-id392 . 10) (undo-tree-id393 . 1) (undo-tree-id394 . 9) (undo-tree-id395 . 1) (undo-tree-id396 . 8) (undo-tree-id397 . 1) (undo-tree-id398 . 7) (undo-tree-id399 . 1) (undo-tree-id400 . 6) (undo-tree-id401 . 1) (undo-tree-id402 . 5) (undo-tree-id403 . 1) (undo-tree-id404 . 4) (undo-tree-id405 . 1) (undo-tree-id406 . 3) (undo-tree-id407 . 1) (undo-tree-id408 . 2) (undo-tree-id409 . 2) (undo-tree-id410 . 2) (undo-tree-id411 . -22) 272) nil (23421 53716 635521 159000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -273) (undo-tree-id412 . -1) (273 . 274) (272 . 273) (262 . 272) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 262) (undo-tree-id413 . -1) (undo-tree-id414 . 1) (undo-tree-id415 . 1) (undo-tree-id416 . 1) (undo-tree-id417 . 1) (undo-tree-id418 . 1) (undo-tree-id419 . -1) (258 . 262) (257 . 259) (#("\"" 0 1 (fontified nil)) . -257) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (251 . 258) (249 . 251) (241 . 249) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -241) (undo-tree-id422 . -1) (undo-tree-id423 . 1) (#("," 0 1 (fontified t face font-lock-comment-face)) . -242) (undo-tree-id424 . -1) (undo-tree-id425 . 1) 243 (241 . 243) (232 . 241) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -232) (undo-tree-id426 . -1) (229 . 233) (223 . 229) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 223) (undo-tree-id427 . -1) (undo-tree-id428 . 1) (undo-tree-id429 . 1) (undo-tree-id430 . 1) (undo-tree-id431 . 1) (undo-tree-id432 . 1) (undo-tree-id433 . 1) (undo-tree-id434 . 1) (undo-tree-id435 . -1) (217 . 223) (216 . 218) (#("\"" 0 1 (fontified nil)) . -216) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (208 . 217) (206 . 208) (t 23421 53696 172093 163000) 205) nil (23421 53716 635651 286000) 0 nil]) ((162 . 179) (#("	EOF = \"EOF\"
" 0 7 (fontified t) 7 12 (fontified t face font-lock-string-face) 12 13 (fontified t)) . -162) (undo-tree-id156 . -13) (undo-tree-id157 . -13) (undo-tree-id158 . 12) (undo-tree-id159 . 11) (undo-tree-id160 . 10) (undo-tree-id161 . 9) (undo-tree-id162 . 8) (undo-tree-id163 . 8) (undo-tree-id164 . 7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -8) (undo-tree-id171 . 6) (undo-tree-id172 . 5) (undo-tree-id173 . 4) (undo-tree-id174 . 3) (undo-tree-id175 . -11) (undo-tree-id176 . -12) (undo-tree-id177 . 2) (undo-tree-id178 . -11) (undo-tree-id179 . -12) (undo-tree-id180 . 1) (undo-tree-id181 . 1) (204 . 205) 201) nil (23421 53696 171969 559000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -202) (undo-tree-id182 . -1) (202 . 203) (195 . 202) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -195) (undo-tree-id183 . -1) (undo-tree-id184 . 1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -196) (undo-tree-id185 . -1) (undo-tree-id186 . 1) (#("i" 0 1 (fontified t face font-lock-comment-face)) . -197) (undo-tree-id187 . -1) (undo-tree-id188 . 1) 198 (186 . 198) (#("f" 0 1 (fontified t face font-lock-comment-face)) . -186) (undo-tree-id189 . -1) (179 . 187) (#("I" 0 1 (fontified t face font-lock-comment-face)) . -179) (undo-tree-id190 . -1) (undo-tree-id191 . 1) 180 (177 . 180) (176 . 177) (#("	" 0 1 (fontified nil)) . 175) (175 . 176) (175 . 176) (#("	" 0 1 (fontified t)) . 175) (undo-tree-id192 . -1) 176 (174 . 176) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 174) (undo-tree-id193 . -1) (undo-tree-id194 . 1) (undo-tree-id195 . 1) (undo-tree-id196 . 1) (undo-tree-id197 . 1) (undo-tree-id198 . 1) (undo-tree-id199 . -1) (170 . 174) (169 . 171) (#("\"" 0 1 (fontified nil)) . -169) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (168 . 170) (#("-" 0 1 (fontified t)) . -168) (undo-tree-id202 . -1) 169 (163 . 169) (161 . 163) (#("\"" 0 1 (fontified nil face font-lock-string-face)) . 161) (undo-tree-id203 . -1) (undo-tree-id204 . 1) (undo-tree-id205 . 1) (undo-tree-id206 . 1) (undo-tree-id207 . 1) (undo-tree-id208 . 1) (undo-tree-id209 . 1) (undo-tree-id210 . 1) (undo-tree-id211 . 1) (undo-tree-id212 . 1) (undo-tree-id213 . -1) (153 . 161) (152 . 154) (#("\"" 0 1 (fontified nil)) . -152) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (142 . 153) (141 . 142) (#("	" 0 1 (fontified nil)) . 141) (141 . 142) (140 . 142) (139 . 141) (#("(" 0 1 (fontified nil)) . -139) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (133 . 140) (132 . 133) (t 23421 53633 355427 307000) 132) nil (23421 53696 172095 323000) 0 nil]) ((#("
" 0 1 (fontified t)) . -132) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . 1) (undo-tree-id154 . -1) 133) nil (23421 53633 355484 956000) 0 nil]) ((#("f" 0 1 (fontified t)) . -133) (undo-tree-id155 . -1) (132 . 134) (t 23421 53613 532094 234000) 132) nil (23421 53633 355497 882000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -35) (undo-tree-id128 . -1) (29 . 36) (#("b" 0 1 (fontified t face font-lock-comment-face)) . -29) (undo-tree-id129 . -1) (undo-tree-id130 . 1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -30) (undo-tree-id131 . -1) (undo-tree-id132 . 1) 31 (19 . 31) (#("D" 0 1 (fontified t face font-lock-comment-face)) . -19) (undo-tree-id133 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -20) (undo-tree-id134 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -21) (undo-tree-id135 . -1) (#("l" 0 1 (fontified t face font-lock-comment-face)) . -22) (undo-tree-id136 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -23) (undo-tree-id137 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -24) (undo-tree-id138 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -25) (undo-tree-id139 . -1) (#(" " 0 1 (fontified t face font-lock-comment-face)) . -26) (undo-tree-id140 . -1) (#("T" 0 1 (fontified t face font-lock-comment-face)) . -27) (undo-tree-id141 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -28) (undo-tree-id142 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -29) (undo-tree-id143 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -30) (undo-tree-id144 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -31) (undo-tree-id145 . -1) (#("T" 0 1 (fontified t face font-lock-comment-face)) . -32) (undo-tree-id146 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -33) (undo-tree-id147 . -1) (#("p" 0 1 (fontified t face font-lock-comment-face)) . -34) (undo-tree-id148 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -35) (undo-tree-id149 . -1) 36 (t 23421 53604 785427 686000)) nil (23421 53613 531057 107000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -36) (undo-tree-id127 . -1) (36 . 37) (16 . 36) (16 . 17) 30 (t 23421 53595 145427 814000)) nil (23421 53604 786849 555000) 0 nil]) ((#("f" 0 1 (fontified t face font-lock-comment-face)) . -54) (undo-tree-id126 . -1) (39 . 55) (39 . 40) 48 (t 23421 53584 125427 955000)) nil (23421 53595 146544 156000) 0 nil]) ((59 . 78) (#("	Type TokenType
" 0 16 (fontified t)) . -59) (undo-tree-id0 . -16) (undo-tree-id1 . -16) (undo-tree-id2 . -16) (undo-tree-id3 . 15) (undo-tree-id4 . 14) (undo-tree-id5 . 13) (undo-tree-id6 . 12) (undo-tree-id7 . 11) (undo-tree-id8 . 10) (undo-tree-id9 . 9) (undo-tree-id10 . 8) (undo-tree-id11 . 7) (undo-tree-id12 . 6) (undo-tree-id13 . 5) (undo-tree-id14 . 4) (undo-tree-id15 . 3) (undo-tree-id16 . 2) (undo-tree-id17 . 1) (undo-tree-id18 . 1) (92 . 93) 89) nil (23421 53584 124040 822000) 0 nil]) ((#("f" 0 1 (fontified t)) . -90) (undo-tree-id19 . -1) (77 . 91) (76 . 77) (74 . 76) (60 . 74) (59 . 60) (58 . 60) (57 . 59) (#("{" 0 1 (fontified nil)) . -57) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (39 . 58) (37 . 39) (16 . 37) (14 . 16) (1 . 14)) nil (23421 53584 124068 248000) 0 nil]) ((#("// token/token.go
" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 18 (fontified t face font-lock-comment-face)) . 1) (undo-tree-id22 . -18) (undo-tree-id23 . 18) (undo-tree-id24 . 17) (undo-tree-id25 . 16) (undo-tree-id26 . 15) (undo-tree-id27 . 14) (undo-tree-id28 . 13) (undo-tree-id29 . 12) (undo-tree-id30 . 11) (undo-tree-id31 . 10) (undo-tree-id32 . 9) (undo-tree-id33 . 8) (undo-tree-id34 . 7) (undo-tree-id35 . 6) (undo-tree-id36 . 5) (undo-tree-id37 . 4) (undo-tree-id38 . 3) (undo-tree-id39 . 2) (undo-tree-id40 . 1) (undo-tree-id41 . 1) (undo-tree-id42 . 18) (undo-tree-id43 . 17) (undo-tree-id44 . 18) (undo-tree-id45 . -15) (undo-tree-id46 . -17) (undo-tree-id47 . 16) (undo-tree-id48 . 17) (undo-tree-id49 . 15) (undo-tree-id50 . 16) (undo-tree-id51 . 14) (undo-tree-id52 . 15) (undo-tree-id53 . 13) (undo-tree-id54 . 14) (undo-tree-id55 . 12) (undo-tree-id56 . 13) (undo-tree-id57 . 11) (undo-tree-id58 . 12) (undo-tree-id59 . 10) (undo-tree-id60 . 11) (undo-tree-id61 . 9) (undo-tree-id62 . 10) (undo-tree-id63 . 8) (undo-tree-id64 . 9) (undo-tree-id65 . 7) (undo-tree-id66 . 8) (undo-tree-id67 . 6) (undo-tree-id68 . 7) (undo-tree-id69 . 5) (undo-tree-id70 . 6) (undo-tree-id71 . 4) (undo-tree-id72 . 5) (undo-tree-id73 . 3) (undo-tree-id74 . 4) (undo-tree-id75 . 4) (undo-tree-id76 . 3) (undo-tree-id77 . 5) (undo-tree-id78 . 4) (undo-tree-id79 . 6) (undo-tree-id80 . 5) (undo-tree-id81 . 7) (undo-tree-id82 . 6) (undo-tree-id83 . 8) (undo-tree-id84 . 7) (undo-tree-id85 . 9) (undo-tree-id86 . 8) (undo-tree-id87 . 10) (undo-tree-id88 . 9) (undo-tree-id89 . 11) (undo-tree-id90 . 10) (undo-tree-id91 . 12) (undo-tree-id92 . 11) (undo-tree-id93 . 13) (undo-tree-id94 . 12) (undo-tree-id95 . 14) (undo-tree-id96 . 13) (undo-tree-id97 . 15) (undo-tree-id98 . 14) (undo-tree-id99 . 16) (undo-tree-id100 . 15) (undo-tree-id101 . 17) (undo-tree-id102 . 16) (undo-tree-id103 . 18) (undo-tree-id104 . 17) (undo-tree-id105 . 18) (undo-tree-id106 . 18)) nil (23421 53584 124265 257000) 0 nil]) ((#("f" 0 1 (fontified t)) . -19) (undo-tree-id107 . -1) (18 . 20) (3 . 18) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -3) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . 1) (undo-tree-id111 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -4) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . 1) (undo-tree-id115 . -1) (#("k" 0 1 (fontified t face font-lock-comment-face)) . -5) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . 1) (undo-tree-id119 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -6) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . 1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -7) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . 1) 8 (1 . 8) (t . -1)) nil (23421 53584 124327 340000) 0 nil]) nil nil (23421 53584 124336 174000) 0 nil] #1# 8725 21 nil]